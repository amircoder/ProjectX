
ext.app = [
        compileSdkVersion: 29,
        buildToolsVersion: '29.0.2',
        targetSdkVersion : 29,
        minSdkVersion    : 21,
        applicationId : 'project.x.test',
        applicationVersionName : '1.0-showcase',
        applicationVersionCode : 1
]

def kotlin_version = '1.3.50'
ext.kotlin = [
        kotlin : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
]
def gradle_plugin_version = '3.5.1'

def daggerVersion = '2.20'
ext.dagger = [
        'dagger' : "com.google.dagger:dagger:$daggerVersion",
        'daggerAndroid' : "com.google.dagger:dagger-android:$daggerVersion",
        'daggerAndroidSupport' : "com.google.dagger:dagger-android-support:$daggerVersion",
        'daggerCompiler' : "com.google.dagger:dagger-compiler:$daggerVersion",
        'daggerAndroidProcessor' : "com.google.dagger:dagger-android-processor:$daggerVersion"

]

def archCompomentVersion = '2.0.0'
ext.arch = [
        'lifecycleExtensions' : "androidx.lifecycle:lifecycle-extensions:$archCompomentVersion",
        'coreTest' : "androidx.arch.core:core-testing:$archCompomentVersion"
]

def roomVersion = '2.2.2'
def navigation_version = '1.0.0-rc02'
def jUnitVersion = '4.12'
def mockitoVersion = '2.13.0'

def powermockVersion = '2.0.0-beta.5'
ext.powerMock = [
        'powermockApiMockito2' : "org.powermock:powermock-api-mockito2:$powermockVersion",
        'powermockJunit4' : "org.powermock:powermock-module-junit4:$powermockVersion",
]

def assertjVersion = '3.14.0'
ext.assertj = [
        'asserjCore' :  "org.assertj:assertj-core:$assertjVersion"
]

def assertjAndroidVersion = '1.1.1'
ext.assertjAndroid = [
        'assertjAndroid' : "com.squareup.assertj:assertj-android:$assertjAndroidVersion"
]

def robolectricVersion = '3.8'
ext.robolectricVersion = [
        'robolectric': "org.robolectric:robolectric:$robolectricVersion"
]

def robolectricShadowsVersion = '3.3.2'
ext.roboelctricShadowVersion = [
        'shadowsPlayServices' : "org.robolectric:shadows-play-services:$robolectricShadowsVersion"
]

def mockKVersion = '1.8.5'
ext.mockk = [
        'mockk' : "io.mockk:mockk:$mockKVersion"
]

def navigational_component = '2.2.0-rc02'
ext.navigation = [
        'fragment' : "androidx.navigation:navigation-fragment:$navigational_component",
        'ui' : "androidx.navigation:navigation-ui:$navigational_component",
        'fragmentKtx' : "androidx.navigation:navigation-fragment-ktx:$navigational_component",
        'uiKtx' : "androidx.navigation:navigation-ui-ktx:$navigational_component"
]

def chuck = '1.1.0'
ext.chuck = [
        'chuck' : "com.readystatesoftware.chuck:library:$chuck",
        'chuckNoOp' : "com.readystatesoftware.chuck:library-no-op:$chuck"
]

def appComponent = '1.1.0'
ext.appComponent = [
       'appComponent' : "androidx.appcompat:appcompat:$appComponent"
]

def rxJava = '2.2.1'
ext.room = [
        roomRuntime : "androidx.room:room-runtime:$rxJava",
        compiler : "androidx.room:room-compiler:$rxJava",
        rx2 : "androidx.room:room-rxjava2:$rxJava",
        common : "androidx.room:room-common:$rxJava"
]

def androidX = '1.0.0'

ext.androidx = [
        'recyclerview' : "androidx.recyclerview:recyclerview:$androidX",
        'cardView' : "androidx.cardview:cardview:$androidX"
]
